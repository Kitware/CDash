# See app.php in the config/ directory for a description of these variables.
APP_NAME=CDash
APP_ENV=production
APP_DEBUG=false
APP_KEY=
APP_URL=https://localhost

# The following two variables are only used for docker compose production installations.
SSL_CERTIFICATE_FILE=/etc/ssl/certs/ssl-cert-snakeoil.pem
SSL_CERTIFICATE_KEY_FILE=/etc/ssl/private/ssl-cert-snakeoil.key
NUM_WORKERS=1

# database.php
DB_DATABASE=cdash
DB_PASSWORD=secret
#DB_CONNECTION=
#DB_HOST=
#DB_PORT=
#DB_USERNAME=

# cdash.php

# Should CDash automatically remove old builds?
#AUTOREMOVE_BUILDS=true

# How long should CDash store parsed input files (in hours?)
# Set to 0 if you do not wish to backup parsed submission files.
#BACKUP_TIMEFRAME=48

# Maximum number of builds allowed per project.
# When set to 0 projects are not limited by number of builds.
#BUILDS_PER_PROJECT=0

# Whether or not CDash submissions should trigger daily updates.
# Disable this if you want more fine grained control over when/how
# daily updates are triggered (e.g. cron).
#DAILY_UPDATES=true

# Should users be taken directly to a certain project when they arrive
# via index.php?
#DEFAULT_PROJECT=

# Whether to delete existing subprojects and/or dependencies that aren't
# mentioned by a newly uploaded Project.xml
#DELETE_OLD_SUBPROJECTS=true

# Use hostip.info to geolocate IP addresses
#GEOLOCATE_IP_ADDRESSES=true

# The GitHub App ID for this CDash installation.
# If this is set, CDash will posts commits checks for any GitHub repository
# that has this app installed.
#GITHUB_APP_ID=null
# Location of the private key that allows this CDash installation to act
# as a GitHub App.
#GITHUB_PRIVATE_KEY=
# Optional secret used to secure the GitHub webhook.
#GITHUB_WEBHOOK_SECRET=

# If set to true, CDash will always report a status of 'success' for its GitHub check.
# This option is useful if you don't want the CDash's GitHub check to block merging.
#GITHUB_ALWAYS_PASS=false

# Maximum size of large text fields, in bytes. 0 for unlimited
#LARGE_TEXT_LIMIT=0

# Lock user account after N failed login attempts.
#LOCKOUT_ATTEMPTS=5

# How long to lock an account for? (in minutes)
#LOCKOUT_LENGTH=1

# The label on the "user" field for the Login form, defaults to Email.
# Consider changing this for clarity if you're authenticating against
# something other than an email address in LDAP.
#LOGIN_FIELD=Email

# The maximum visibility level for user-created projects on this instance.
# Instance admins are able to override this setting and set project visibility
# to anything.  Thus, this setting is only meaningful if USER_CREATE_PROJECTS=true.
# Options: PUBLIC, PROTECTED, PRIVATE
# MAX_PROJECT_VISIBILITY=PUBLIC

# Maximum per-project upload quota, in GB
#MAX_UPLOAD_QUOTA=10

## Settings related to user passwords
# Minimum password length for CDash accounts.
#MINIMUM_PASSWORD_LENGTH=5
# Of these four kinds of characters: (uppercase, lowercase, numbers, symbols)
# How many must be present in a password for it to be considered valid?
#MINIMUM_PASSWORD_COMPLEXITY=1
# For a given character type (defined above), how many characters in the
# password must match this type for the password to get credit for it?
# For example, if you set this value to 2, then a password would need at least
# two numbers to get a +1 to its complexity score for containing numbers.
#PASSWORD_COMPLEXITY_COUNT=1
# How long should passwords last for? (in days)
# Password rotation is disabled when this is set to 0.
#PASSWORD_EXPIRATION=0
# Unique password count (new password cannot match last X)
# 0 means you can never reuse a password.
#UNIQUE_PASSWORD_COUNT=0

# Should CDash should post build/test results to a build's pull request?
# This additionally requires CTEST_CHANGE_ID to be set by the client.
#NOTIFY_PULL_REQUEST=false

# Should CDash only register valid emails
#REGISTRATION_EMAIL_VERIFY=true

# Number of seconds to use for the basis of exponential backoff when requeuing
# asynchronous submissions.
#QUEUE_RETRY_BASE=5

# How long should CDash wait (in seconds) before requeueing an asychronous job?
#QUEUE_TIMEOUT=2000

# Is this CDash instance configured to use remote queue workers?
# Enabling this setting additionally requires QUEUE_CONNECTION to be set
# to some value other than 'sync'.
#REMOTE_WORKERS=false

# Whether or not submission XML files are validated before being processed.
# Enabling this setting will trigger a scan through XML files uploaded in
# each submission in order to preemptively reject malformed files.
#VALIDATE_XML_SUBMISSIONS=true

# Should we show the most recent submission time for a project or subproject?
# Disabling this feature can improve rendering performance of index.php
# for projects with lots of subproject builds.
#SHOW_LAST_SUBMISSION=true

# Log when a page takes more this this many seconds to load.
#SLOW_PAGE_TIME=10

# How long authentication tokens should last before expiring (in seconds).
# Default is six months.
# 0 here means that tokens do not expire.
#TOKEN_DURATION=15811200

# Whitelist of projects that are allowed to have unlimited builds.
# example value:
#    ["EmailProjectExample","BatchmakeExample"]
# The lack of spaces is important.
#UNLIMITED_PROJECTS=[]

# Should CDash compress test and coverage results in the database?
#USE_COMPRESSION=true

# Whether or not this CDash instance should attempt to communicate with
# VCS (eg. GitHub) API endpoints.
#USE_VCS_API=true

# Should normal users be allowed to create projects
# USER_CREATE_PROJECTS = false

# logging.php
#LOG_CHANNEL=stack

# broadcasting.php
#BROADCAST_DRIVER=log
#PUSHER_APP_ID=
#PUSHER_APP_KEY=
#PUSHER_APP_SECRET=
#PUSHER_APP_CLUSTER=mt1

# cache.php
#CACHE_DRIVER=file

# queue.php
# Perform synchronous parsing of submissions by default.
# Set this to 'database' to turn on asynchronous parsing.
QUEUE_CONNECTION=database

# session.php
#SESSION_DRIVER=file

# Number of minutes before and idle session is allowed to expire.
#SESSION_LIFETIME=120

# filesystem.php

# Default filesystem driver for CDash to use.
# Supported options are 'local' and 's3'.
#FILESYSTEM_DRIVER=local

# The following env vars are only relevant for S3 support.
# The name of the bucket that CDash where will store files.
# AWS_BUCKET=cdash

# The AWS region where this S3 bucket is stored.
# Otherwise set this to 'local' if you're using MinIO.
# AWS_REGION=

# Credentials for access to this S3 bucket.
#AWS_ACCESS_KEY_ID=
#AWS_SECRET_ACCESS_KEY=

# Set this to true if you're using MinIO
#AWS_USE_PATH_STYLE_ENDPOINT=false

# URL of your MinIO server (if you're using MinIO). Leave blank otherwise.
#AWS_ENDPOINT=

# URL of the bucket on your MinIO server (if you're using MinIO). Leave blank otherwise.
#AWS_URL=

# mail.php
#MAIL_MAILER=smtp
#MAIL_HOST=smtp.mailgun.org
#MAIL_PORT=587
#MAIL_FROM_ADDRESS=
#MAIL_FROM_NAME=CDash
#MAIL_REPLY_ADDRESS=
#MAIL_USERNAME=null
#MAIL_PASSWORD=null
#MAIL_ENCRYPTION=null

MIX_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
MIX_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"

# auth.php
# (currently, users or ldap, defaults to users if not defined)
# CDASH_AUTHENTICATION_PROVIDER=ldap

# Whether or not "normal" username+password authentication is enabled
# USERNAME_PASSWORD_AUTHENTICATION_ENABLED=true

# Whether or not "normal" username+password registration form submission is enabled
# USER_REGISTRATION_FORM_ENABLED=true

# Whether or not a Project administrator can register a user
# PROJECT_ADMIN_REGISTRATION_FORM_ENABLED=true

# Require all new projects to use authenticated submissions.
# Instance administrators can override this, and this setting has no effect on
# existing projects.
# REQUIRE_AUTHENTICATED_SUBMISSIONS=false


# ldap.php
#LDAP_HOSTS=
#LDAP_BASE_DN=
#LDAP_USERNAME=
#LDAP_PASSWORD=
# The type of LDAP server you are connecting to.
# Valid values are activedirectory, openldap, and freeipa.
#LDAP_PROVIDER=
# Whether or not to log LDAP activities. Useful for debugging.
#LDAP_LOGGING=

# ldap_auth.php
# The LDAP users attribute containing their email address ('mail' by default).
#LDAP_EMAIL_ATTRIBUTE=
# The LDAP users attribute used to locate your users. ('mail' by default).
#LDAP_LOCATE_USERS_BY=
# The LDAP users attribute used for authentication ('distinguishedname' by default).
#LDAP_BIND_USERS_BY=
# The LDAP attribute name that contains your users object GUID.
#LDAP_GUID=
# Additional LDAP query filters to restrict authorized user list
# Example: To restrict users to a specific Active Directory group:
# '(memberOf=cn=superCoolRescrictedGroup,cn=Users,dc=example,dc=com)'
# LDAP_FILTERS_ON=

# oauth2.php

# Whether or not to use GitHub as an OAuth2 provider
#GITHUB_ENABLE=false
#GITHUB_CLIENT_ID=
#GITHUB_CLIENT_SECRET=

# Whether or not to use GitLab as an OAuth2 provider
#GITLAB_ENABLE=false
#GITLAB_CLIENT_ID=
#GITLAB_CLIENT_SECRET=
# The GitLab server to authenticate against.
#GITLAB_DOMAIN=https://gitlab.com

# Whether or not to use Google as an OAuth2 provider
#GOOGLE_ENABLE=false
#GOOGLE_CLIENT_ID=
#GOOGLE_CLIENT_SECRET=
#
# saml2.php
# Whether or not to use SAML2 authentication
#SAML2_ENABLED=false

# What text to display in the SAML2 login button
#SAML2_LOGIN_TEXT=SAML2

# Whether or not to automatically register new users upon first login
#SAML2_AUTO_REGISTER_NEW_USERS=false
