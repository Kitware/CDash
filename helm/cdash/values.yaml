cdash:
  # cdash.host is the host name for CDash.
  host: cdash-example.local

  # cdash.https controls whether the CDash external URL
  # uses https instead of http.
  # When using https for a production CDash server, you should
  # also create a Kubernetes TLS secret named "tls-cdash"
  # https://kubernetes.io/docs/reference/kubectl/generated/kubectl_create/kubectl_create_secret_tls/
  https: true

  # cdash.image is the Docker image to use for this CDash instance.
  image: kitware/cdash:latest

  # By default, this Helm chart uses an embedded postgres database.
  # To use an external database instead, set postgresql.enable: false
  # below and create a secret named 'cdash-database' with the following
  # values:
  # - host (required)
  # - password (required)
  # - username (optional, defaults to 'postgres')
  # - database (optional, defaults to 'cdash')

  # cdash.env can be used to configure CDash by setting
  # additional environment variables.
  # https://github.com/Kitware/CDash/blob/master/docs/config.md
  env: |-
    #BACKUP_TIMEFRAME: 36

  website:
    resources:
      limits:
        memory: 256Mi

  worker:
    # cdash.worker.replicas controls how many worker pods
    # we should create for this Helm release.
    replicas: 1

    resources:
      limits:
        memory: 256Mi

# See here for more config settings: https://github.com/bitnami/charts/tree/main/bitnami/postgresql
postgresql:
  enabled: true
  auth:
    database: cdash
    existingSecret: "{{ .Release.Name }}-website"
    secretKeys:
      adminPasswordKey: DB_PASSWORD
  primary:
    persistence:
      size: "8Gi"

# See here for more config settings: https://github.com/bitnami/charts/tree/main/bitnami/minio
minio:
  enabled: true
  auth:
    existingSecret: "{{ .Release.Name }}-website"
    rootPasswordSecretKey: AWS_SECRET_ACCESS_KEY
    rootUserSecretKey: AWS_ACCESS_KEY_ID
  defaultBuckets: cdash
  ingress:
    enabled: true
  persistence:
    annotations:
      helm.sh/resource-policy: keep
    size: "8Gi"
