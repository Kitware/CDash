"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")


"Indicates what fields are available at the top level of a query operation."
type Query {
  "Find a single project."
  project(
    "Search by primary key."
    id: ID @eq @rules(apply: ["prohibits:name", "required_without:name"])

    "Search by name."
    name: String @eq @rules(apply: ["prohibits:id", "required_without:id"])
  ): Project @find(scopes: ["forUser"])

  "List the projects available to the current user."
  projects(
    id: ID @in
  ): [Project!]! @all(scopes: ["forUser"]) @orderBy(column: "id")
}


type Mutation {
  "Create a new project."
  createProject(input: CreateProjectInput! @spread): Project @create @canModel(ability: "create")
}


"A registered CDash user.  Can be autogenerated by 3rd-party authentication providers."
type User {
  "Unique primary key."
  id: ID!

  "Non-unique first name."
  firstname: String!

  "Non-unique last name."
  lastname: String!

  "Unique email address."
  email: String!

  "Institution."
  institution: String!

  "Whether or not the user is a global administrator."
  admin: Boolean!
}


"Project."
type Project {
  "Unique primary key."
  id: ID!

  "Unique name."
  name: String!

  "Description."
  description: String!

  "Homepage for this project."
  homeurl: String!

  "Visibility."
  visibility: ProjectVisibility! @rename(attribute: "public")

  "A boolean indicating whether authenticated submissions are required."
  authenticateSubmissions: Boolean! @rename(attribute: "authenticatesubmissions")

  builds: [Build!]! @hasMany @orderBy(column: "id")

  "The sites which have submitted a build to this project."
  sites: [Site!]! @belongsToMany @orderBy(column: "id")

  "Users with the administrator role for this project."
  administrators: [User!]! @belongsToMany @orderBy(column: "id")
}

enum ProjectVisibility {
  "Available to all users and guests."
  PUBLIC @enum(value: 1)

  "Available to all registered users."
  PROTECTED @enum(value: 2)

  "Only available to users added to the project."
  PRIVATE @enum(value: 0)
}

input CreateProjectInput {
  "Unique name."
  name: String!

  "Description."
  description: String!

  "Project homepage"
  homeurl: String!

  "Visibility."
  visibility: ProjectVisibility! @rename(attribute: "public") @rules(attribute: "public", apply: ["App\\Rules\\ProjectVisibilityAllowed"])

  "A boolean indicating whether authenticated submissions are required."
  authenticateSubmissions: Boolean! @rename(attribute: "authenticatesubmissions") @rules(attribute: "authenticatesubmissions", apply: ["App\\Rules\\ProjectAuthenticateSubmissions"])
}


"Build."
type Build {
  "Unique primary key."
  id: ID!

  "Name."
  name: String!

  "Start time."
  starttime: DateTime!

  "End time."
  endtime: DateTime!

  "The site associated with this build."
  site: Site! @belongsTo

  # TODO: Figure out project relation.  project{build{project}} currently throws an error.
}


"Site."
type Site {
  "Unique primary key."
  id: ID!

  name: String!

  "IP address."
  ip: String!

  latitude: Float!

  longitude: Float!
}
