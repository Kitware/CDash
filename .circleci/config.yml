version: 2.1
jobs:
  build:
    environment:
      SITENAME: "CircleCI 2.1"
    machine: true
    steps:
      - checkout
      - run:
          name: MySQL Build
          command: |
            set -x
            source ~/project/docker/commands.bash
            cdash_environment mysql
            cdash_build_image
      - run:
          name: Spin Up MySQL Build
          command: |
            set -x
            source ~/project/docker/commands.bash
            cdash_start_docker_services
            cdash_wait_for_ready http://localhost/ping 12
      - run:
          name: Test MySQL Build
          command: |
            set -x
            source ~/project/docker/commands.bash
            cdash_run_and_submit_mysql_ctest
      - run:
          name: Tear Down MySQL Build
          command: |
            set -x
            source ~/project/docker/commands.bash
            cdash_stop_docker_services
      - run:
          name: Spin Up Postgres Build
          command: |
            set -x
            source ~/project/docker/commands.bash
            cdash_environment postgres
            cdash_start_docker_services
      - run:
          name: Test Postgres Build
          command: |
            set -x
            source ~/project/docker/commands.bash
            docker exec cdash bash -c "cp /home/kitware/cdash/.circleci/postgres/env /home/kitware/cdash/.env"
            cdash_run_and_submit_pgsql_ctest
      - run:
          name: Build Docker Image
          command: |

              cp docker/common.docker Dockerfile
              docker build -t kitware/cdash-common:latest .
              cp docker/cdash.docker Dockerfile
              docker build -t kitware/cdash:latest .
              cp docker/cdash-worker.docker Dockerfile
              docker build -t kitware/cdash-worker:latest .
      - run:
          name: Publish Docker Image
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
              docker push kitware/cdash:latest
              docker push kitware/cdash_worker:latest
            fi
