version: 2.1
jobs:
  build:
    environment:
      SITENAME: "CircleCI 2.1"
    machine: true
    steps:
      - checkout
      - run:
          name: MySQL Build
          command: |
            set -x
            source ~/project/.circleci/commands.bash
            docker compose -f docker/docker-compose.yml \
                           -f docker/docker-compose.dev.yml \
                           -f docker/docker-compose.mysql.yml \
                           --env-file .env.dev up -d \
                           --build \
                           --wait
      - run:
          name: Test MySQL
          command: |
            set -x
            source ~/project/.circleci/commands.bash
            cdash_run_and_submit_mysql_ctest
      - run:
          name: Tear Down MySQL Build
          command: |
            set -x
            docker compose -f docker/docker-compose.yml \
                           -f docker/docker-compose.dev.yml \
                           -f docker/docker-compose.mysql.yml \
                           --env-file .env.dev down
      - run:
          name: Postgres Build
          command: |
            set -x
            source ~/project/.circleci/commands.bash
            docker compose -f docker/docker-compose.yml \
                           -f docker/docker-compose.dev.yml \
                           -f docker/docker-compose.postgres.yml \
                           --env-file .env.dev up -d \
                           --build \
                           --wait
      - run:
          name: Test Postgres
          command: |
            set -x
            source ~/project/.circleci/commands.bash
            cdash_run_and_submit_pgsql_ctest
      - run:
          name: Build Production Docker Images
          command: |
              DOCKER_TAG="${CIRCLE_TAG:-latest}"
              docker build -t kitware/cdash:${DOCKER_TAG} --target cdash .
              docker build -t kitware/cdash-worker:${DOCKER_TAG} --target cdash-worker .
      - run:
          name: Publish Docker Images
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ] || [ -n "${CIRCLE_TAG}" ]; then
              DOCKER_TAG="${CIRCLE_TAG:-latest}"
              echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
              docker push kitware/cdash:testing
              docker push kitware/cdash:${DOCKER_TAG}
              docker push kitware/cdash-worker:${DOCKER_TAG}
            fi
workflows:
  all-builds:
    jobs:
      - build:
          filters:
            tags:
              only: /^.*/
